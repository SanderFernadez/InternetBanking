@using InternetBanking.Core.Application.ViewModels.Advances
@using InternetBanking.Core.Domain.Enums
@model SaveAdvanceViewModel

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header bg-primary text-white">
            <h5 class="modal-title">Avance de Efectivo</h5>
        </div>
        <div class="modal-body">
            <!-- Formulario de Transferencia -->
            <form id="transferForm" method="post" action="@Url.Action("CashAdvance", "CashAdvance")">
                <!-- Cuenta de Origen -->
                <div class="mb-4">
                    <label asp-for="AccountCreditId" class="form-label font-weight-bold">Cuenta de Origen</label>
                    <select asp-for="AccountCreditId" class="form-select form-select-lg" required>
                        <option value="" disabled selected>Seleccione una Tarjeta de Crédito</option>
                        @foreach (var account in Model.accounts)
                        {
                            decimal creditValue = (account.CreditLimit ?? 0) - (account.LoanAmount ?? 0);
                            if (account.AccountType == AccountType.Loan || account.AccountType == AccountType.Saving || account.AccountType == AccountType.SavingPrincipal) continue;
                            <option value="@account.Id">@account.AccountNumber - Saldo: @creditValue.ToString("C", new System.Globalization.CultureInfo("es-DO"))</option>
                        }
                    </select>
                    <span asp-validation-for="AccountCreditId" class="text-danger"></span>
                </div>

                <!-- Cuenta de Destino -->
                <div class="mb-4">
                    <label asp-for="DestinationAccountId" class="form-label font-weight-bold">Cuenta de Destino</label>
                    <select asp-for="DestinationAccountId" class="form-select form-select-lg" required>
                        <option value="" disabled selected>Seleccione la Cuenta de Ahorro</option>
                        @foreach (var account in Model.accounts)
                        {
                            if (account.AccountType == AccountType.Credit || account.AccountType == AccountType.Loan) continue;
                            <option value="@account.AccountNumber">@account.AccountNumber - Saldo: @account.CurrentBalance.ToString("C", new System.Globalization.CultureInfo("es-DO"))</option>
                        }
                    </select>
                    <span asp-validation-for="DestinationAccountId" class="text-danger"></span>
                </div>

                <!-- Monto a Transferir -->
                <div class="mb-4">
                    <label asp-for="Amount" class="form-label font-weight-bold">Monto a Transferir</label>
                    <input asp-for="Amount" class="form-control form-control-lg" placeholder="Ingrese el monto" type="number" step="0.01" min="0.01" required />
                    <span asp-validation-for="Amount" class="text-danger"></span>
                </div>

                @{
                    int i = 0;
                }
                <!-- Campos ocultos para cada cuenta en la lista -->
                @foreach (var account in Model.accounts)
                {
                    <input type="hidden" name="Accounts[@i].Id" value="@account.Id" />
                    <input type="hidden" name="Accounts[@i].AccountNumber" value="@account.AccountNumber" />
                    <input type="hidden" name="Accounts[@i].CurrentBalance" value="@account.CurrentBalance" />
                    <input type="hidden" name="Accounts[@i].UserId" value="@account.UserId" />
                    <input type="hidden" name="Accounts[@i].AccountType" value="@account.AccountType" />
                    <input type="hidden" name="Accounts[@i].InitialAmount" value="@account.InitialAmount" />
                    <input type="hidden" name="Accounts[@i].CreditLimit" value="@account.CreditLimit" />
                    <input type="hidden" name="Accounts[@i].LoanAmount" value="@account.LoanAmount" />
                    i++;
                }

                <!-- Botón para abrir el modal de confirmación -->
                <div class="modal-footer d-flex justify-content-between">
                    <button type="button" class="btn btn-primary" onclick="showConfirmationModal()">Realizar Transferencia</button>
                </div>
            </form>

            <!-- Modal de Confirmación -->
            <div id="confirmationModal" class="modal" tabindex="-1" role="dialog" style="display: none;">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirmación de Transferencia</h5>
                            <button type="button" class="close" onclick="document.getElementById('confirmationModal').style.display='none'">&times;</button>
                        </div>
                        <div class="modal-body">
                            <p>¿Deseas confirmar la transferencia entre cuentas?</p>
                            <p><strong>Cuenta Origen:</strong> <span id="sourceAccountInfo"></span></p>
                            <p><strong>Cuenta Destino:</strong> <span id="destinationAccountInfo"></span></p>
                            <p><strong>Monto:</strong> <span id="confirmationAmount"></span></p>
                            <p><strong>Nombre del Destinatario:</strong> <span id="ownerName"></span></p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" onclick="document.getElementById('confirmationModal').style.display='none'">Cancelar</button>
                            <button type="button" class="btn btn-primary" onclick="confirmTransfer()">Confirmar Transferencia</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const amountInput = document.querySelector('input[name="Amount"]');
            const sourceAccountSelect = document.querySelector('select[name="AccountCreditId"]');
            const destinationAccountSelect = document.querySelector('select[name="DestinationAccountId"]');

            amountInput.addEventListener("input", function () {
                if (this.value < 0) {
                    this.value = "";
                    alert("El monto debe ser un valor positivo.");
                }
            });

            function showAlert(message) {
                alert(message);
            }

            window.showConfirmationModal = function () {
                const destinationAccount = destinationAccountSelect.value;
                const amountPaid = amountInput.value;

                if (!destinationAccount) {
                    showAlert("Por favor, seleccione una cuenta de destino.");
                    return;
                }
                if (!sourceAccountSelect.value) {
                    showAlert("Por favor, seleccione una cuenta de origen.");
                    return;
                }
                if (!amountPaid || amountPaid <= 0) {
                    showAlert("Por favor, ingrese un monto válido.");
                    return;
                }

                fetch(`/Payments/GetAccountOwner?accountNumber=${destinationAccount}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById("ownerName").innerText = `${data.firstName} ${data.lastName}`;
                            document.getElementById("sourceAccountInfo").innerText = sourceAccountSelect.selectedOptions[0].text;
                            document.getElementById("destinationAccountInfo").innerText = destinationAccountSelect.selectedOptions[0].text;
                            document.getElementById("confirmationAmount").innerText = parseFloat(amountPaid).toLocaleString("es-DO", { style: "currency", currency: "DOP" });
                            document.getElementById("confirmationModal").style.display = "block";
                        } else {
                            showAlert("Cuenta destino no encontrada.");
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }

            window.confirmTransfer = function () {
                document.getElementById("transferForm").submit();
            }
        });
    </script>
}
