@model List<InternetBanking.Core.Application.ViewModels.BeneficiaryViewModel>

@{
    ViewData["Title"] = "Beneficiarios";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>@ViewData["Title"]</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBeneficiaryModal">
            Agregar Beneficiario
        </button>
    </div>

    <div class="list-group">
        @if (Model.Any())
        {
            foreach (var beneficiary in Model)
            {
                <div class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <strong>Nombre:</strong> @beneficiary.FirstName @beneficiary.LastName <br />
                        <strong>Cuenta:</strong> @beneficiary.AccountNumber
                    </div>
                    <button class="btn btn-danger btn-sm" onclick="confirmDelete('@beneficiary.AccountNumber')">Eliminar</button>
                </div>
            }
        }
        else
        {
            <div class="list-group-item text-muted">
                No tienes beneficiarios agregados.
            </div>
        }
    </div>
</div>

<!-- Modal para agregar beneficiario -->
<div class="modal fade" id="addBeneficiaryModal" tabindex="-1" aria-labelledby="addBeneficiaryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBeneficiaryModalLabel">Agregar Beneficiario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addBeneficiaryForm" method="post" action="@Url.Action("AddBeneficiary", "Beneficiaries")">
                    <div class="mb-3">
                        <label for="accountNumber" class="form-label">Número de Cuenta</label>
                        <input type="text" id="accountNumber" name="AccountNumber" class="form-control" required />
                        <span class="text-danger" id="accountError" style="display: none;">Número de cuenta no existe.</span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" onclick="validateAndSubmit()">Agregar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmación de eliminación -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas eliminar este beneficiario?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Sí, Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function validateAndSubmit() {
            // Simulación de validación para verificar si la cuenta existe
            const accountNumber = document.getElementById("accountNumber").value;
            const accountExists = accountNumber === "123456789"; // Simulación

            if (!accountExists) {
                document.getElementById("accountError").style.display = "block";
            } else {
                document.getElementById("accountError").style.display = "none";
                document.getElementById("addBeneficiaryForm").submit();
            }
        }

        function confirmDelete(accountNumber) {
            const confirmDeleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));
            document.getElementById('confirmDeleteButton').onclick = function () {
                window.location.href = `@Url.Action("DeleteBeneficiary", "Beneficiaries")?accountNumber=${accountNumber}`;
            };
            confirmDeleteModal.show();
        }
    </script>
}

<style>
    h2 {
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
    }

    .list-group-item {
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-danger {
        background-color: #dc3545;
        border: none;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }
</style>
